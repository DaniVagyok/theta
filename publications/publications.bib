@incollection{safecomp2014,
    author    = {T{\'o}th, Tam{\'a}s and V{\"o}r{\"o}s, Andr{\'a}s and Majzik, Istv\'an},
    title     = {Verification of a Real-Time Safety-Critical Protocol Using a Modelling Language with Formal Data and Behaviour Semantics},
    year      = {2014},
    booktitle = {Computer Safety, Reliability, and Security},
	series    = {Lecture Notes in Computer Science},
	volume    = {8696},
    editor    = {Bondavalli, Andrea and Ceccarelli, Andrea and Ortmeier, Frank},
    publisher = {Springer},
    pages     = {207--218},
    isbn      = {978-3-319-10557-4},
    doi       = {10.1007/978-3-319-10557-4_24},

    type      = {Workshop},
    url_pdf   = {safecomp2014.pdf},
    url_link  = {http://link.springer.com/chapter/10.1007%2F978-3-319-10557-4_24},
    url_mtmt  = {https://vm.mtmt.hu/www/index.php?mode=html&st_on=1&url_on=1&com_on=1&la_on=1&type_on=1&cite_type=3&DocumentID=2735720},
    abstract  = {Formal methods have an important role in ensuring the correctness of safety critical systems. However, their application in industry is always cumbersome: the lack of experts and the complexity of formal languages prevents the efficient application of formal verification techniques. In this paper we take a step in the direction of making formal modelling simpler by introducing a framework which helps designers to construct formal models efficiently. Our formal modelling framework supports the development of traditional transition systems enriched with complex data types with type checking and type inference services, time dependent behaviour and timing parameters with relations. In addition, we introduce a toolchain to provide formal verification. Finally, we demonstrate the usefulness of our approach in an industrial case study.},
}

@misc{hajduaMsc2015,
    author   = {Hajdu, \'Akos},
    title    = {A Survey on {CEGAR}-based Model Checking},
    note     = {Master's Thesis, Budapest University of Technology and Economics},
    year     = {2015},
    type     = {Thesis},
    
    url_pdf  = {hajduaMsc2015.pdf},
    url_link = {http://diplomaterv.vik.bme.hu/en/Theses/CEGARalapu-modellellenorzes-vizsgalata},
    abstract = {Formal verification is becoming more prevalent, especially in the development of safety-critical systems, where mathematically precise proofs are required to ensure suitability and faultlessness. However, a major drawback of formal methods is their high computational complexity. This also holds for model checking, one of the most prevalent formal verification techniques. Model checking aims to automatically verify a system by exhaustively (explicitly or symbolically) analyzing its possible behaviors. However, relatively small systems can have an unmanageably large or even infinite number of behaviors. There are several existing approaches to handle this problem, but as the complexity of the models increases, new and more efficient algorithms are required. A widely used technique to overcome the former problem is Counterexample-Guided Abstraction Refinement (CEGAR). CEGAR-based approaches work on an abstraction of the model, which is computationally easier to handle. A common abstraction scheme is to over-approximate the set of behaviors by systematically relaxing constraints in the model. However, the result of the algorithm may be imprecise due to the coarseness of the abstraction. In such cases, the abstraction has to be refined. CEGAR-based approaches usually start with a coarse abstraction to minimize computational cost and apply refinement until a precise result is obtained. In my work I examine the literature and the theoretical background of model checking of transition systems using CEGAR-based approaches. I present first order and temporal logic for formalizing systems and requirements, and I analyze two CEGAR algorithms based on different subtypes of over-approximation. I also examine a handful of related techniques that can make CEGAR more efficient, including SAT/SMT solving, interpolation and lazy abstraction. I also propose a new algorithm that combines the advantages of these approaches and techniques. I have implemented these algorithms in order to evaluate and compare their performance. Analysis of the measurement results highlights the advantages and shortcomings of the algorithms for several types of models.},
}

@inproceedings{minisy2016tt,
	author    = {T\'oth, Tam\'as and Majzik, Istv\'an},
	title     = {Formal Modeling of Real-Time Systems with Data Processing},
	year      = {2016},
	booktitle = {Proceedings of the 23rd PhD Mini-Symposium},
    editor    = {Pataki, B\'{e}la},
	pages     = {46--49},
	isbn      = {978-963-313-220-3},
	publisher = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},

    type      = {Local event},    
    url_pdf   = {minisy2016tt.pdf},
    url_link  = {https://www.mit.bme.hu/eng/system/files/oktatas/9860/23Minisymp_proceedings.pdf},
    abstract  = {The behavior of practical safety critical systems usually combines real-time behavior with structured data flow. To ensure correctness of such systems, both aspects have to be modeled and formally verified. Time related behavior can be efficiently modeled and analyzed in terms of timed automata. At the same time, program verification techniques like abstract interpretation and software model checking can efficiently handle data flow. In this paper, we describe a simple formalism that is able to model both aspects of such systems and enables the combination of formal verification techniques for real-time systems and software. We also outline a straightforward method for building efficient verifiers for the formalism based on the combination of analyses for the respective aspects.},
}

@incollection{forte2016,
	author     = {Hajdu, \'Akos and T\'oth, Tam\'as and V\"or\"os, Andr\'as and Majzik, Istv\'an},
	title      = {A Configurable {CEGAR} Framework with Interpolation-based Refinements},
	year       = {2016},
	booktitle  = {Formal Techniques for Distributed Objects, Components and Systems},
	series     = {Lecture Notes in Computer Science},
	volume     = {9688},
	pages      = {158--174},
	publisher  = {Springer},
	isbn       = {978-3-319-39570-8},
	doi        = {10.1007/978-3-319-39570-8_11},
	editor     = {Albert, Elvira and Lanese, Ivan},

    type       = {Conference},
	url_pdf    = {forte2016.pdf},
	url_link   = {http://link.springer.com/chapter/10.1007/978-3-319-39570-8_11},
	url_slides = {http://www.slideshare.net/AkosHajdu/a-configurable-cegar-framework-with-interpolationbased-refinements},
    url_mtmt   = {https://vm.mtmt.hu/www/index.php?mode=html&st_on=1&url_on=1&com_on=1&la_on=1&type_on=1&cite_type=3&DocumentID=3069540},
	abstract   = {Correctness of software components in a distributed system is a key issue to ensure overall reliability. Formal verification techniques such as model checking can show design flaws at early stages of development. Abstraction is a key technique for reducing complexity by hiding information, which is not relevant for verification. Counterexample-Guided Abstraction Refinement (CEGAR) is a verification algorithm that starts from a coarse abstraction and refines it iteratively until the proper precision is obtained. Many abstraction types and refinement strategies exist for systems with different characteristics. In this paper we show how these algorithms can be combined into a configurable CEGAR framework. In our framework we also present a new CEGAR configuration based on a combination of abstractions, being able to perform better for certain models. We demonstrate the use of the framework by comparing several configurations of the algorithms on various problems, identifying their advantages and shortcomings.},
}

@misc{sallaigyBsc2016,
    author = {Sallai, Gyula},
    title = {Development of a Verification Compiler for {C} Programs},
    note = {Bachelor's Thesis, Budapest University of Technology and Economics},
    year = {2016},
    type = {Thesis},
    url_pdf = {sallaigyBsc2016.pdf},
    url_link = {http://diplomaterv.vik.bme.hu/en/Theses/Verifikacios-fordito-fejlesztese-C-programokhoz},
}

@misc{czipobBsc2016,
    author = {Czip\'o, Bence},
    title = {Hierarchical Abstraction for the Verification of State-based Systems},
    note = {Bachelor's Thesis, Budapest University of Technology and Economics},
    year = {2016},
    type = {Thesis},
    url_pdf = {czipobBsc2016.pdf},
    url_link = {http://diplomaterv.vik.bme.hu/en/Theses/Hierarchikus-allapotterkepek-absztrakcioalapu},
}

@misc{farkasrMsc2016,
    author = {Farkas, Rebeka},
    title = {Verification of Timed Automata by CEGAR-Based Algorithms},
    note = {Master's Thesis, Budapest University of Technology and Economics},
    year = {2016},
    type = {Thesis},
    url_pdf = {farkasrMsc2016.pdf},
    url_link = {http://diplomaterv.vik.bme.hu/en/Theses/Idozitett-rendszerek-CEGAR-alapu-analizise},
}

@inproceedings{minisy2017ha,
    author     = {Hajdu, \'{A}kos and Micskei, Zolt\'an},
    title      = {Exploratory Analysis of the Performance of a Configurable {CEGAR} Framework},
    year       = {2017},
    booktitle  = {Proceedings of the 24th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Pataki, B\'{e}la},
    pages      = {34--37},
    doi        = {10.5281/zenodo.291895},
    isbn       = {978-963-313-243-2},

    type       = {Local event},
    url_pdf    = {minisy2017ha.pdf},
    url_link   = {https://doi.org/10.5281/zenodo.291895},
    url_slides = {http://www.slideshare.net/AkosHajdu/exploratory-analysis-of-the-performance-of-a-configurable-cegar-framework},
    url_mtmt   = {https://vm.mtmt.hu/www/index.php?mode=html&st_on=1&url_on=1&com_on=1&la_on=1&type_on=1&cite_type=3&DocumentID=3203886},
    abstract   = {Formal verification techniques can check the correctness of systems in a mathematically precise way. However, their computational complexity often prevents their successful application. The counterexample-guided abstraction refinement (CEGAR) algorithm aims to overcome this problem by automatically building abstractions for the system to reduce its complexity. Previously, we developed a generic CEGAR framework, which incorporates many configurations of the algorithm. In this paper we focus on an exploratory analysis of our framework. We identify parameters of the systems and algorithm configurations, overview some possible analysis methods and present preliminary results. We show that different variants are more efficient for certain tasks and we also describe how the properties of the system and parameters of the algorithm affect the success of verification.},
}

@inproceedings{minisy2017fr,
    author     = {Farkas, Rebeka and Hajdu, \'{A}kos},
    title      = {Activity-Based Abstraction Refinement for Timed Systems},
    year       = {2017},
    booktitle  = {Proceedings of the 24th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Pataki, B\'{e}la},
    pages      = {18--21},
    doi        = {10.5281/zenodo.291891},
    isbn       = {978-963-313-243-2},

    type       = {Local event},
    url_pdf    = {minisy2017fr.pdf},
    url_link   = {https://doi.org/10.5281/zenodo.291891},
    url_mtmt   = {https://vm.mtmt.hu/www/index.php?mode=html&st_on=1&url_on=1&com_on=1&la_on=1&type_on=1&cite_type=3&DocumentID=3203890},
    abstract   = {Formal analysis of real time systems is important as they are widely used in safety critical domains. Such systems combine discrete behaviours represented by control states and timed behaviours represented by clock variables. The counterexample-guided abstraction refinement (CEGAR) algorithm utilizes the fundamental technique of abstraction to system verification. We propose a CEGAR-based algorithm for reachability analysis of timed systems. The algorithm is specialized to handle the time related behaviours efficiently by introducing a refinement technique tailored specially to clock variables. The performance of the presented algorithm is demonstrated by runtime measurements on models commonly used for benchmarking such algorithms.},
}

@inproceedings{minisy2017sgy,
    author     = {Sallai, Gyula and T\'oth, Tam\'as},
    title      = {Boosting Software Verification with Compiler Optimizations},
    year       = {2017},
    booktitle  = {Proceedings of the 24th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Pataki, B\'{e}la},
    pages      = {66--69},
    doi        = {10.5281/zenodo.291903},
    isbn       = {978-963-313-243-2},

    type       = {Local event},
    url_pdf    = {minisy2017sgy.pdf},
    url_link   = {https://doi.org/10.5281/zenodo.291903},
    abstract   = {Unlike testing, formal verification can not only prove the presence of errors, but their absence as well, thus making it suitable for verifying safety-critical systems. Formal verification may be performed by transforming the already implemented source code to a formal model and querying the resulting model on reachability of an erroneous state. Sadly, transformations from source code to a formal model often yield large and complex models, which may result in extremely high computational effort for a verifier algorithm. This paper describes a workflow that provides formal verification for C programs, aided by optimization techniques usually used in compiler design in order to reduce the size and complexity of a program and thus improve the performance of the verifier.},
}

@inproceedings{minisy2017tt,
    author     = {T\'oth, Tam\'as and Majzik, Istv\'an},
    title      = {Timed Automata Verification using Interpolants},
    year       = {2017},
    booktitle  = {Proceedings of the 24th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Pataki, B\'{e}la},
    pages      = {82--85},
    doi        = {10.5281/zenodo.291907},
    isbn       = {978-963-313-243-2},

    type       = {Local event},
    url_pdf    = {minisy2017tt.pdf},
    url_link   = {https://doi.org/10.5281/zenodo.291907},
    abstract   = {The behavior of safety critical systems is often constrained by real time requirements. To model time dependent behavior and enable formal verification, timed automata are widely used as a formal model of such systems. However, due to real-valued clock variables, the state space of these systems is not finite, thus model checkers for timed automata are usually based on zone abstraction. The coarseness of the abstraction profoundly impacts performance of the analysis. In this paper, we propose a lazy abstraction algorithm based on interpolation for zones to enable efficient reachability checking for timed automata. In order to efficiently handle zone abstraction, we define interpolation in terms of difference bound matrices. We extend the notion of zone interpolants to sequences of transitions of a timed automaton, thus enabling the use of zone interpolants for abstraction refinement.},
}

@incollection{fesca2017,
    author     = {Czip\'o, Bence and Hajdu, \'{A}kos and T\'oth, Tam\'as and Majzik, Istv\'an},
    year       = {2017},
    title      = {Exploiting Hierarchy in the Abstraction-Based Verification of Statecharts Using SMT Solvers},
    editor     = {Kofro\v{n}, Jan and Tumova, Jana},
    booktitle  = {Proceedings of the 14th International Workshop on Formal Engineering Approaches to Software Components and Architectures},
    series     = {Electronic Proceedings in Theoretical Computer Science},
    volume     = {245},
    publisher  = {Open Publishing Association},
    pages      = {31--45},
    doi        = {10.4204/EPTCS.245.3},
    
    type       = {Workshop},
    url_pdf    = {fesca2017.pdf},
    url_link   = {http://eptcs.web.cse.unsw.edu.au/paper.cgi?FESCA2017.3},
    url_slides = {http://www.slideshare.net/AkosHajdu/exploiting-hierarchy-in-the-abstractionbased-verification-of-statecharts-using-smt-solvers},
    url_mtmt   = {https://vm.mtmt.hu/www/index.php?mode=html&st_on=1&url_on=1&com_on=1&la_on=1&type_on=1&cite_type=3&DocumentID=3203861},
    abstract   = {Statecharts are frequently used as a modeling formalism in the design of state-based systems. Formal verification techniques are also often applied to prove certain properties about the behavior of the system. One of the most efficient techniques for formal verification is Counterexample-Guided Abstraction Refinement (CEGAR), which reduces the complexity of systems by automatically building and refining abstractions. In our paper we present a novel adaptation of the CEGAR approach to hierarchical statechart models. First we introduce an encoding of the statechart to logical formulas that preserves information about the state hierarchy. Based on this encoding we propose abstraction and refinement techniques that utilize the hierarchical structure of statecharts and also handle variables in the model. The encoding allows us to use SMT solvers for the systematic exploration and verification of the abstract model, including also bounded model checking. We demonstrate the applicability and efficiency of our abstraction techniques with measurements on an industry-motivated example.},
}

@incollection{vpt2017,
    author     = {Sallai, Gyula and Hajdu, \'{A}kos and T\'oth, Tam\'as and Micskei, Zolt\'an},
    year       = {2017},
    title      = {Towards Evaluating Size Reduction Techniques for Software Model Checking},
    editor     = {Lisitsa, Alexei and Nemytykh, Andrei P. and Proietti, Maurizio},
    booktitle  = {Proceedings of the Fifth International Workshop on Verification and Program Transformation},
    series     = {Electronic Proceedings in Theoretical Computer Science},
    volume     = {253},
    publisher  = {Open Publishing Association},
    pages      = {75--91},
    doi        = {10.4204/EPTCS.253.7},
    
    type       = {Workshop},
    url_pdf    = {vpt2017.pdf},
    url_link   = {http://eptcs.web.cse.unsw.edu.au/paper.cgi?VPT2017.7},
    url_slides = {http://www.slideshare.net/AkosHajdu/towards-evaluating-size-reduction-techniques-for-software-model-checking},
    abstract   = {Formal verification techniques are widely used for detecting design flaws in software systems. Formal verification can be done by transforming an already implemented source code to a formal model and attempting to prove certain properties of the model (e.g. that no erroneous state can occur during execution). Unfortunately, transformations from source code to a formal model often yield large and complex models, making the verification process inefficient and costly. In order to reduce the size of the resulting model, optimization transformations can be used. Such optimizations include common algorithms known from compiler design and different program slicing techniques. Our paper describes a framework for transforming C programs to a formal model, enhanced by various optimizations for size reduction. We evaluate and compare several optimization algorithms regarding their effect on the size of the model and the efficiency of the verification. Results show that different optimizations are more suitable for certain models, justifying the need for a framework that includes several algorithms.}
}

@incollection{formats2017,
	author     = {T\'oth, Tam\'as and Majzik, Istv\'an},
	title      = {Lazy Reachability Checking for Timed Automata using Interpolants},
	year       = {2017},
	booktitle  = {Formal Modelling and Analysis of Timed Systems},
    editor     = {Abate, Alessandro and Geeraerts, Gilles},
	series     = {Lecture Notes in Computer Science},
	volume     = {10419},
    pages      = {264--280},
	publisher  = {Springer},
	doi        = {10.1007/978-3-319-65765-3_15},

    type       = {Conference},
    url_pdf    = {formats2017.pdf},
    url_link   = {http://link.springer.com/chapter/10.1007%2F978-3-319-65765-3_15},
	abstract   = {To solve the reachability problem for timed automata, model checkers usually apply forward search and zone abstraction. To ensure efficiency and termination, the computed zones are generalized using maximal constants obtained from guards either by static analysis or lazily for a given path. In this paper, we propose a lazy method based on zone abstraction that, instead of the constants in guards, considers the constraints themselves. The method is a combination of forward search, backward search and interpolation over zones: if the zone abstraction is too coarse, we propagate a zone representing bad states backwards using backward search, and use interpolation to extract a relevant zone to strengthen the current abstraction. We propose two refinement strategies in this framework, and evaluate our method on the usual benchmark models for timed automata. Our experiments show that the proposed method compares favorably to known methods based on efficient lazy non-convex abstractions.},
}

@inproceedings{fmcad2017,
    author     = {T\'oth, Tam\'as and Hajdu, \'{A}kos and V\"or\"os, Andr\'as and Micskei, Zolt\'an and Majzik, Istv\'an},
    year       = {2017},
    title      = {Theta: a Framework for Abstraction Refinement-Based Model Checking},
    booktitle  = {Proceedings of the 17th Conference on Formal Methods in Computer-Aided Design},
	isbn       = {978-0-9835678-7-5},
    editor     = {Stewart, Daryl and Weissenbacher, Georg},
    pages      = {176--179},
    doi        = {10.23919/FMCAD.2017.8102257},
    
    
    type       = {Conference},
    url_pdf    = {fmcad2017.pdf},
    url_link   = {http://www.cs.utexas.edu/users/hunt/FMCAD/FMCAD17/proceedings/},
    url_slides = {https://www.slideshare.net/AkosHajdu/theta-a-framework-for-abstraction-refinementbased-model-checking},
    abstract   = {In this paper, we present Theta, a configurable model checking framework. The goal of the framework is to support the design, execution and evaluation of abstraction refinement-based reachability analysis algorithms for models of different formalisms. It enables the definition of input formalisms, abstract domains, model interpreters, and strategies for abstraction and refinement. Currently it contains front-end support for transition systems, control flow automata and timed automata. The built-in abstract domains include predicates, explicit values, zones and their combinations, along with various refinement strategies implemented for each. The configurability of the framework allows the integration of several abstraction and refinement methods, this way supporting the evaluation of their advantages and shortcomings. We demonstrate the applicability of the framework by use cases for the safety checking of PLC, hardware, C programs and timed automata models.},
}

@inproceedings{minisy2018ha,
    author     = {Hajdu, \'{A}kos and Micskei, Zolt\'an},
    title      = {A Preliminary Analysis on the Effect of Randomness in a {CEGAR} Framework},
    year       = {2018},
    booktitle  = {Proceedings of the 25th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Pataki, B\'{e}la},
    pages      = {32--35},  

    type       = {Local event},
    url_pdf    = {minisy2018.pdf},
    url_slides = {https://www.slideshare.net/AkosHajdu/a-preliminary-analysis-on-the-effect-of-randomness-in-a-cegar-framework},
    abstract   = {Formal verification techniques can check the correctness of systems in a mathematically precise way. Counterexample-Guided Abstraction Refinement (CEGAR) is an automatic algorithm that reduces the complexity of systems by constructing and refining abstractions. CEGAR is a generic approach, having many variants and strategies developed over the years. However, as the variants become more and more advanced, one may not be sure whether the performance of a strategy can be attributed to the strategy itself or to other, unintentional factors. In this paper we perform an experiment by evaluating the performance of different strategies while randomizing certain external factors such as the search strategy and variable naming. We show that randomization introduces a great variation in the output metrics, and that in several cases this might even influence whether the algorithm successfully terminates.},
}

@inproceedings{avocs2018,
    author     = {Farkas, Rebeka and T\'oth, Tam\'as and Hajdu, \'{A}kos and V\"or\"os, Andr\'as},
    title      = {Backward reachability analysis for timed automata with data variables},
    year       = {2018},
    booktitle  = {Proceedings of the 18th International Workshop on Automated Verification of Critical Systems},
    
    note       = {(Accepted.)},
    
    type       = {Workshop},
}